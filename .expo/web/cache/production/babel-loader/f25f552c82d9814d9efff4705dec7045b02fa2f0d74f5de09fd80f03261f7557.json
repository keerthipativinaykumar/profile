{"ast":null,"code":"var digitCharacters=['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','#','$','%','*','+',',','-','.',':',';','=','?','@','[',']','^','_','{','|','}','~'];export var decode83=function decode83(str){var value=0;for(var i=0;i<str.length;i++){var c=str[i];var digit=digitCharacters.indexOf(c);value=value*83+digit;}return value;};export var encode83=function encode83(n,length){var result='';for(var i=1;i<=length;i++){var digit=Math.floor(n)/Math.pow(83,length-i)%83;result+=digitCharacters[Math.floor(digit)];}return result;};","map":{"version":3,"names":["digitCharacters","decode83","str","value","i","length","c","digit","indexOf","encode83","n","result","Math","floor","pow"],"sources":["/Users/mobileappteamdetrix/WorkSpace/PersonalWork/AppProjects/ReactNative/PersonalPortfolioSIte/profile/node_modules/expo-image/src/utils/blurhash/base83.ts"],"sourcesContent":["const digitCharacters = [\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n  '#',\n  '$',\n  '%',\n  '*',\n  '+',\n  ',',\n  '-',\n  '.',\n  ':',\n  ';',\n  '=',\n  '?',\n  '@',\n  '[',\n  ']',\n  '^',\n  '_',\n  '{',\n  '|',\n  '}',\n  '~',\n];\n\nexport const decode83 = (str: string) => {\n  let value = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str[i];\n    const digit = digitCharacters.indexOf(c);\n    value = value * 83 + digit;\n  }\n  return value;\n};\n\nexport const encode83 = (n: number, length: number): string => {\n  let result = '';\n  for (let i = 1; i <= length; i++) {\n    const digit = (Math.floor(n) / Math.pow(83, length - i)) % 83;\n    result += digitCharacters[Math.floor(digit)];\n  }\n  return result;\n};\n"],"mappings":"AAAA,GAAM,CAAAA,eAAe,CAAG,CACttC,GAAI,CAAAC,KAAK,CAAG,CAAC,CACb,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,GAAG,CAACG,MAAM,CAAED,CAAC,EAAE,CAAE,CACnC,GAAM,CAAAE,CAAC,CAAGJ,GAAG,CAACE,CAAC,CAAC,CAChB,GAAM,CAAAG,KAAK,CAAGP,eAAe,CAACQ,OAAO,CAACF,CAAC,CAAC,CACxCH,KAAK,CAAGA,KAAK,CAAG,EAAE,CAAGI,KAAK,C,CAE5B,MAAO,CAAAJ,KAAK,CACd,CAAC,CAED,MAAO,IAAM,CAAAM,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,CAAS,CAAEL,MAAc,CAAY,CAC5D,GAAI,CAAAM,MAAM,CAAG,EAAE,CACf,IAAK,GAAI,CAAAP,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIC,MAAM,CAAED,CAAC,EAAE,CAAE,CAChC,GAAM,CAAAG,KAAK,CAAIK,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC,CAAGE,IAAI,CAACE,GAAG,CAAC,EAAE,CAAET,MAAM,CAAGD,CAAC,CAAC,CAAI,EAAE,CAC7DO,MAAM,EAAIX,eAAe,CAACY,IAAI,CAACC,KAAK,CAACN,KAAK,CAAC,CAAC,C,CAE9C,MAAO,CAAAI,MAAM,CACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}