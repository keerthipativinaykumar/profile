{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useCallback, useLayoutEffect } from 'react';\nimport { StackActions, useNavigation } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nvar SplashView = function SplashView() {\n  var navigation = useNavigation();\n  var _Dimensions$get = Dimensions.get('window'),\n    WIDTH = _Dimensions$get.width,\n    HEIGHT = _Dimensions$get.height;\n  var maxScreenWidth = 400;\n  var _useFonts = useFonts({\n      'PoppinsBold': require(\"../assets/fonts/PoppinsBold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n      setTimeout(function () {\n        navigation.dispatch(StackActions.replace('Home'));\n      }, 1500);\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#fff',\n      justifyContent: 'center',\n      alignContent: 'center',\n      height: HEIGHT,\n      width: WIDTH\n    },\n    onLayout: onLayoutRootView,\n    children: _jsx(Text, {\n      style: {\n        textAlign: 'center',\n        fontFamily: 'PoppinsBold',\n        fontSize: 32,\n        alignSelf: 'center',\n        color: 'black'\n      },\n      children: \"VINAY KUMAR KEERTHIPATI\"\n    })\n  });\n};\nexport default SplashView;","map":{"version":3,"names":["React","useCallback","useLayoutEffect","StackActions","useNavigation","useFonts","SplashScreen","Dimensions","jsx","_jsx","preventAutoHideAsync","SplashView","navigation","_Dimensions$get","get","WIDTH","width","HEIGHT","height","maxScreenWidth","_useFonts","require","_useFonts2","_slicedToArray","fontsLoaded","onLayoutRootView","_asyncToGenerator","hideAsync","setTimeout","dispatch","replace","View","style","flex","backgroundColor","justifyContent","alignContent","onLayout","children","Text","textAlign","fontFamily","fontSize","alignSelf","color"],"sources":["/Users/mobileappteamdetrix/WorkSpace/PersonalWork/AppProjects/ReactNative/PersonalPortfolioSIte/profile/Screens/Splash.js"],"sourcesContent":["import { View, Text } from 'react-native'\nimport React, { useCallback, useLayoutEffect } from 'react'\nimport { StackActions, useNavigation } from '@react-navigation/native'\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Dimensions } from 'react-native-web';\n\nSplashScreen.preventAutoHideAsync();\n\nconst SplashView = () => {\n\n    const navigation = useNavigation();\n\n    const { width: WIDTH, height: HEIGHT } = Dimensions.get('window');\n    const maxScreenWidth = 400;\n\n    const [fontsLoaded] = useFonts({\n        'PoppinsBold': require('../assets/fonts/PoppinsBold.ttf'),\n    });\n\n    const onLayoutRootView = useCallback(async () => {\n        if (fontsLoaded) {\n            await SplashScreen.hideAsync();\n            setTimeout(() => {\n                navigation.dispatch(StackActions.replace('Home'))\n            }, 1500);\n        }\n    }, [fontsLoaded]);\n\n    if (!fontsLoaded) {\n        return null;\n    }\n\n    return (\n        <View style={{\n            flex: 1,\n            backgroundColor: '#fff',\n            justifyContent: 'center',\n            alignContent: 'center',\n            height: HEIGHT,\n            width: WIDTH,\n        }}\n            onLayout={onLayoutRootView}\n        >\n            <Text style={{ textAlign: 'center', fontFamily: 'PoppinsBold', fontSize: 32, alignSelf: 'center', color: 'black' }}>{`VINAY KUMAR KEERTHIPATI`}</Text>\n        </View>\n    )\n}\n\nexport default SplashView"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AAC3D,SAASC,YAAY,EAAEC,aAAa,QAAQ,0BAA0B;AACtE,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAAC,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGnDH,YAAY,CAACI,oBAAoB,CAAC,CAAC;AAEnC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EAErB,IAAMC,UAAU,GAAGR,aAAa,CAAC,CAAC;EAElC,IAAAS,eAAA,GAAyCN,UAAU,CAACO,GAAG,CAAC,QAAQ,CAAC;IAAlDC,KAAK,GAAAF,eAAA,CAAZG,KAAK;IAAiBC,MAAM,GAAAJ,eAAA,CAAdK,MAAM;EAC5B,IAAMC,cAAc,GAAG,GAAG;EAE1B,IAAAC,SAAA,GAAsBf,QAAQ,CAAC;MAC3B,aAAa,EAAEgB,OAAO,kCAAkC;IAC5D,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAFKI,WAAW,GAAAF,UAAA;EAIlB,IAAMG,gBAAgB,GAAGxB,WAAW,CAAAyB,iBAAA,CAAC,aAAY;IAC7C,IAAIF,WAAW,EAAE;MACb,MAAMlB,YAAY,CAACqB,SAAS,CAAC,CAAC;MAC9BC,UAAU,CAAC,YAAM;QACbhB,UAAU,CAACiB,QAAQ,CAAC1B,YAAY,CAAC2B,OAAO,CAAC,MAAM,CAAC,CAAC;MACrD,CAAC,EAAE,IAAI,CAAC;IACZ;EACJ,CAAC,GAAE,CAACN,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE;IACd,OAAO,IAAI;EACf;EAEA,OACIf,IAAA,CAACsB,IAAI;IAACC,KAAK,EAAE;MACTC,IAAI,EAAE,CAAC;MACPC,eAAe,EAAE,MAAM;MACvBC,cAAc,EAAE,QAAQ;MACxBC,YAAY,EAAE,QAAQ;MACtBlB,MAAM,EAAED,MAAM;MACdD,KAAK,EAAED;IACX,CAAE;IACEsB,QAAQ,EAAEZ,gBAAiB;IAAAa,QAAA,EAE3B7B,IAAA,CAAC8B,IAAI;MAACP,KAAK,EAAE;QAAEQ,SAAS,EAAE,QAAQ;QAAEC,UAAU,EAAE,aAAa;QAAEC,QAAQ,EAAE,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAN,QAAA;IAAA,CAAkC;EAAC,CACpJ,CAAC;AAEf,CAAC;AAED,eAAe3B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}